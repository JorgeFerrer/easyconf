<document>
   <properties>
      <title>Taglib</title>
      <author >Jorge Ferrer</author>
   </properties>
   <body>
      <section name="Accesing the configuration from JSP files">
         <p>
				When developing J2EE applications it is sometimes useful to access
                the configuration directly from JSPs. EasyConf provides two jsp tags 
                for this purpose:
            <ul>
               <li><tt>property</tt>: to read a single property object of a component</li>
               <li><tt>configurationObject</tt>: to access the configuration object of a 
                  component</li>
            </ul>
            Both tags retrieve an object and make it available to the JSP as a variable
            and as a request parameter (ala bean:define tag). You can later use JSTL,
            struts bean tags, or similar methods to print or use the object in any 
            desired way.
			</p>
         <p>
            The tag library definition file (TLD) for this libraries can be found inside
            the <tt>easyconf-${version}.jar</tt> file, inside the <tt>tld</tt> directory.
         </p>
      </section>
      <section name="property tag">         
         <p>
				<b>Property attributes</b>
            <ul>
               <li><b>id</b>: the name of the variable/attribute which will hold the property value 
                  (required)</li>
               <li><b>component</b>: the name of the configuraton component from which the property
                  value should be read (required)</li>
               <li><b>type</b>: the type of the Java object to which the property shold be 
                  converted. It is equivalent to calling the different getters of the
                  <tt>ComponentProperties</tt> interface. The allowed values are: 
                  <tt>java.lang.String</tt> (the default),
                  <tt>java.lang.Double</tt>,
                  <tt>java.lang.Float</tt>,
                  <tt>java.lang.Byte</tt>,
                  <tt>java.math.BigDecimal</tt>,
                  <tt>java.lang.BigInteger</tt>,
                  <tt>java.lang.Boolean</tt>,
                  <tt>java.lang.Short</tt>,
                  <tt>java.lang.Long</tt> and
                  <tt>java.util.List</tt>. (This attribute is optional).                  
                </li>
                <li><b>selector1, selector2, selector3, selector4, selector5</b>: allow setting
                  up to 5 selectors for choosing the value of the property (optional)</li>
            </ul>
			</p>
         <p>
            <b>Example (String property)</b>
         </p>
         <source>
            <![CDATA[
<%@ taglib uri="/WEB-INF/tld/easyconf.tld" prefix="easyconf" %>
<easyconf:property id="advertisement_enabled"
                   component="xpression-ui"
                   property="login.advertisement.enabled"
                   selector1="<%=request.getParameter("show-ad")%>/>
<logic:equals name="advertisement_enabled" value="true"/>
  ...
</logic:equals>
               ]]>            
         </source>
         <p>
            <b>Example (java.util.List property)</b>
         </p>
         <source>
            <![CDATA[
<%@ taglib uri="/WEB-INF/tld/easyconf.tld" prefix="easyconf" %>
<easyconf:property id="companies"
                   component="presentation"
                   property="partner.names"
                   type="java.util.list"
                   %>/>
<logic:iterate id="companyName" name="companies"/>
  ...
</logic:iterate>
               ]]>            
         </source>
      </section>
      <section name="configurationObject tag">
         <p>
				<b>Property attributes</b>
            <ul>
               <li><b>id</b>: the name of the variable/attribute which will hold the configuration 
                  object (required)</li>
               <li><b>component</b>: the name of the configuraton component from which the XML file
                  should be read to fill the configuration object (required)</li>
               <li><b>type</b>: the type of the configuration object POJO (optional, default is
                  <tt>java.lang.Object</tt>)</li> 
            </ul>
			</p>
         <p>
            <b>Example</b>
         </p>
         <source>
            <![CDATA[
<%@ taglib uri="/WEB-INF/tld/easyconf.tld" prefix="easyconf" %>

<easyconf:configurationObject id="cmsConfig"
                   component="xpression-cms"
                   type="com.foo.bar.cms.ContentTypeDefinitions"/>
<logic:iterate id="type" name="cmsConfig" property="contentTypes">
  ...
</logic:iterate>                   
               ]]>            
         </source>
      </section>
	  <section name="Taglib URI">
		<p>
			It is a good practice when working with J2EE taglibs to use a symbolic URI
			instead of the real path to the <tt>tld</tt> file. The URI that you should use
			to refer the EasyConf taglib is:
			<source>
				http://easyconf.sourceforge.net/easyconf-tags
			</source>
		</p>
		<p>
			One way to map this URI to the real location of the <tt>tld</tt> file is adding
			the following lines in appropriate place inside the <tt>web.xml</tt> file:
			<source>
            <![CDATA[
<taglib>
	<taglib-uri>http://easyconf.sourceforge.net/easyconf-tags</taglib-uri>
	<taglib-location>/WEB-INF/tld/easyconf.tld</taglib-location>
</taglib>
               ]]>            
			</source>
		</p>
	  </section>
   </body>
</document>
