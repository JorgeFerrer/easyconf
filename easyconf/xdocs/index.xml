<document>

  <properties>
    <title>Welcome to EasyConf</title>
    <author >Jorge Ferrer</author>
  </properties>

  <body>
    <section name="What is EasyConf?">
      <p>
        EasyConf is a library to access configuration of software components and 
        applications. It defines simple conventions to make it easier to use. It 
        was born in a portlets-based portal and has several features useful for 
        this and similar environments.
      </p>
      <p>
        EasyConf aims to make easy the development of highly configurable Java
        applications. You can start with a very simple scheme and when
        you need it you'll be able to add powerful functionality such as XML files, support for 
        several environments or aggregation of componentes.
      </p>
    </section>
    <section name="State">
      <p>
        EasyConf is stable and <i>production ready</i>. It is being used in several production 
        environments without any known bugs. EasyConf is based on several <a href="dependencies.html">external libraries</a>
        which are also stable.
      </p>
      <p>
         <ul>
            <li><b>Latest stable version</b>: 0.9.0</li>
            <li><b>Latest devel version</b>: none</li>
         </ul>
      </p>
      <p>
        Version number has not reached 1.0 yet because we are currently waiting for feedback from
        the community about the <a href="reference/conventions.html">conventions used</a>. Based on this 
        feedback some of the current conventions may change. Should that happen, we will clearly document
        any changes needed when updating.
      </p>
    </section>
    <section name="Main features">
     	<p>
	  		The key <a href="user/features.html">features</a> of EasyConf are:
    	</p>
	  <ol>
        <li><b>Support for XML files, <i>typed</i> property files (including lists, numbers, 
         classes, etc), or a combination of both</b></li>
	     <li><b>Support for multiple environments</b> (development, integration,
  preproduction, production, etc)</li>
	     <li><b>Support for applications which aggregate several components</b>: for example for portlets
	      and portals</li>
        <li><b>Support for ASP applications</b>: each company/organization serviced by the Application 
         Service Provider my have its own configuration (since v0.9)</li> 
        <li><b>Provides access to the configuration using JMX (since v0.9)</b></li>
        <li><b>Well documented!</b></li>
	     <li><b>Easy to remember conventions</b> instead of configuration to simplify usage</li>
	  </ol>
     </section>
    </body>
</document>
